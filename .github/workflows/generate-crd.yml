name: Generate CRD Docs

on: workflow_dispatch

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
        with:
          repository: JakeSCahill/documentation-1
          path: docs-repo

      - name: Download crd-ref-docs
        run: |
          curl -LO https://github.com/elastic/crd-ref-docs/releases/download/v0.0.9/crd-ref-docs
          chmod +x crd-ref-docs
          echo "crd-ref-docs" >> $GITHUB_PATH
          sudo mv crd-ref-docs /usr/local/bin/

      - name: Checkout redpanda repository
        uses: actions/checkout@v2
        with:
          repository: redpanda-data/redpanda
          ref: dev
          path: redpanda
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}

      - name: Generate CRD docs
        run: |
          crd-ref-docs --source-path=./redpanda/src/go/k8s/apis/redpanda/v1alpha1 --templates-dir=./docs-repo/.github/crd-config/templates/asciidoctor --config=./docs-repo/.github/crd-config/config.yaml --renderer=asciidoctor --output-path=./docs-repo/docs/reference

      - name: Rename the output file
        run: |
          mv ./docs-repo/docs/reference/out.asciidoc ./docs-repo/docs/reference/crd-reference.adoc

      - name: Print redpanda-docs directory contents
        run: |
          ls -R ./docs-repo/docs/reference

      - name: Check if changes were made
        id: check_changes
        run: |
          cd ./docs-repo
          changes=$(git status --porcelain)
          if [ -z "$changes" ]; then
            echo "has_changes=false" >> $GITHUB_ENV
          else
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      - name: Commit changes
        if: env.has_changes == 'true'
        run: |
          cd ./docs-repo
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add docs/reference/*
          git commit -m "auto-docs: Update CRD doc"
          git push origin dev
        env:
          ACCESS_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
